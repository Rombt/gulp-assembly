



----------------------- T O D O  -----------------------   
   очищать readme.md только при использовании сборки в качестве шаблона
   преобразавание .ico в иконочный шрифт
   отправка файлов по ftp при каждом обновлении нужно ли?

   разобраться и использовать: 
      https://www.npmjs.com/package/gulp-clean
      https://www.npmjs.com/package/gulp-strip-debug
      https://www.npmjs.com/package/vinyl-paths
   для удаления файлов в clearForTask исопльзовать 
      plugins.nodePath.join(path.images.dest, plugins.nodePath.relative(path.watch.images, dirPath));
   разобраться с удалением папок
      .on('unlinkDir', (currentPath) => {
            console.log("You need delete manually folder:    ", currentPath);
         })
      возможно нужно устанавливать права:
         export const setPermissions = (done) => {
            // Получаем путь к текущему каталогу
            const currentDirectory = process.cwd();

            // Устанавливаем желаемые права доступа (например, чтение и запись для владельца)
            const desiredMode = 0o777; // Это соответствует правам чтения и записи для владельца

            // Используем fs.chmod для установки прав доступа
            fs.chmod(currentDirectory, desiredMode, (err) => {
               if (err) {
                  console.error('Ошибка при установке прав доступа:', err);
                  return done(err);
               }

               console.log(`Права доступа к каталогу ${currentDirectory} успешно изменены на ${desiredMode.toString(8)}`);

               done();
            });
         }   


   Перечень тестов для каждой из задач (пока ручных):

      получение и выгрузка файлов для 
         html     без флагов
         wp    --wp
         pl    --pl
         wp и pl     --wp --pl
         prod и dev ????

      проверить качество оброботки файлов конкретной задачей
      оброботка исключений:
      получение пустого массива в src или dist  


----------------------- DESCRIPTION  ----------------------- 
   Cборка в целом:
      сборка файлов возможна в череёх режимах:
         вёрстка html - результат в папке path.prod.html 
            по умолчанию `${prodFolder}/docs`  для github pages
            в папку dist перемещаются все html файлы из только из src.html, из подпапок файлы не переносятся!
            если нужны подпапки src.html сделать массивом и поместить их туда
         только тема WP - результат в папке path.prod.php
         только плагин для WP - результат в папке path.prod.plug
            файлы с "-core" в имени автоматически не удаляются(!!) из папки dest при удалиении из папки src для их удаления нужно перезапустить сборку
         тема и плагин одновременно
      обрабатываются - перемещаются - отслеживаются, ТОЛЬКО файлы указанные в шаблонах путей
      перемещение файлов без обработки выполняется задачей 'copy' из массива app.path.src.copy
      подпапки удалённые в каталогах DIST из каталогов SRC автоматически не удаляются
         для их удаления нужно перезапустить сборку

         
   Каждая из задач отдельно:
      каждая задача 
         получает пути в формате (строки могут быть заменены массивами):
            для WP и плагинов с флагом --wp:
               {
                  src: (app.isWP && app.forPlugin)
                     ? [...path.src.php, ...path.src.plug]
                     : (app.isWP ? path.src.php : (app.forPlugin ? path.src.plug : path.src.html)),
                  dest: app.isWP ? path.prod.php : path.prod.html,
                  clear: (app.isWP && app.forPlugin)
                     ? this.arrClearForTask([...path.src.php, ...path.src.plug])
                     : (app.isWP
                        ? this.arrClearForTask(path.src.php)
                        : (app.forPlugin ? this.arrClearForTask(path.src.plug) : this.arrClearForTask(path.src.html)
                        )
                     ),
               }
         должна содержать для очистки своего dest метод clearForTask() который возвращает промис
      imagesForTask
         предназначена для запуска в watcher 
         отличается от imagesAll тем что 
      imagesAll

         





обьект path:
   устанавливает пути для всех операций и задач

   Свойства 
      path.prod
      path.src
      path.watch
      path.ThemeName
      path.RootPath

   Методы
      геттеры: 
         path.styles
         path.images
         path.svg
         path.fonts
         path.js
         path.copy
         path.ftp
            без ключей 
               prod.html
            --wp prod.php только пути темы
            --pl prod.plug только пити плагина
            возможно объединение ключей --pl и --wp
         path.clear
            без ключей 
               prod.html
            --wp prod.php только пути темы
            --pl prod.plug только пити плагина
            возможно объединение ключей --pl и --wp
      selectDestPath(file, arrDestPath)
         выбирает пути в зависимисти от того есть ли в src пути файла 'core-plugin' или '-core'
      ClearForTask(path, sub = 'php')
         формирует пути для удаления обновлённых файлов из каталога dest текущей задачи

